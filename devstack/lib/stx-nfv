#!/bin/bash
#
# lib/stx-nfv
# Functions to control the configuration and operation of stx-nfv

_XTRACE_STX_NFV=$(set +o | grep xtrace)
set -o xtrace

STXNFV_DIR=$DEST/stx-nfv
STXNFV_SYSCONFDIR=/etc
STXNFV_OCF_ROOT=/usr/lib/ocf

STX_BIN_DIR=$(get_python_exec_prefix)
STX_PREFIX=${STX_BIN_DIR%/*}

NFV_DIR=$STXNFV_DIR/nfv
NFV_CONF_DIR=$STXNFV_SYSCONFDIR/nfv
NFV_OCF_DIR=$STXNFV_OCF_ROOT/resource.d/nfv
NFV_CLIENT_DIR=$NFV_DIR/nfv-client
NFV_COMMON_DIR=$NFV_DIR/nfv-common
NFV_PLUGINS_DIR=$NFV_DIR/nfv-plugins
NFV_TOOLS_DIR=$NFV_DIR/nfv-tools
NFV_VIM_DIR=$NFV_DIR/nfv-vim

GUEST_CLIENT_VERSION="3.0.1"

STX_SDK_DEPLOY_DIR=${STX_SDK_DEPLOY_DIR:-/opt/deploy/cgcs_sdk}

PYTHON_SITE_DIR=$(python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")

# first-level plugin apis
function install_stx_nfv {
    if is_service_enabled nfv; then
        install_nfv
    fi

    if is_service_enabled guest-client; then
        install_guest_client
    fi
}

function configure_stx_nfv {
    if is_service_enabled nfv; then
        configure_nfv
    fi
}

function start_stx_nfv {
    if is_service_enabled nfv; then
        start_nfv
    fi
}

function stop_stx_nfv {
    if is_service_enabled nfv; then
        stop_nfv
    fi
}

function cleanup_stx_nfv {
    if is_service_enabled nfv; then
        cleanup_nfv
    fi

    if is_service_enabled guest-client; then
        cleanup_guest_client
    fi
}

function test_stx_nfv {
    if is_service_enabled nfv; then
        test_nfv
    fi
}

# internal plugin functions
function python_install {
    pushd $1
    cd $1
    sudo python setup.py install --root=/ --install-lib=${PYTHON_SITE_DIR} --single-version-externally-managed
    popd
}

function install_nfv {
    echo "Installing nfv"
    python_install $NFV_VIM_DIR
    python_install $NFV_COMMON_DIR
    python_install $NFV_PLUGINS_DIR
    python_install $NFV_TOOLS_DIR
    python_install $NFV_CLIENT_DIR

    # nfv
    sudo install -d -m 755 $NFV_CONF_DIR

    # nfv-vim
    sudo install -d -m 755 $NFV_OCF_DIR
    sudo install -p -D -m 755 $NFV_VIM_DIR/scripts/vim $NFV_OCF_DIR/vim
    sudo install -p -D -m 755 $NFV_VIM_DIR/scripts/vim-api $NFV_OCF_DIR/vim-api
    sudo install -p -D -m 755 $NFV_VIM_DIR/scripts/vim-webserver $NFV_OCF_DIR/vim-webserver
    sudo sed -i -e 's|@SYSCONFDIR@|/etc|g' $NFV_OCF_DIR/vim
    sudo sed -i -e 's|@SYSCONFDIR@|/etc|g' $NFV_OCF_DIR/vim-api
    sudo sed -i -e 's|@SYSCONFDIR@|/etc|g' $NFV_OCF_DIR/vim-webserver
    sudo sed -i -e 's|${OCF_ROOT}|/usr/lib/ocf|g' $NFV_OCF_DIR/vim
    sudo sed -i -e 's|${OCF_ROOT}|/usr/lib/ocf|g' $NFV_OCF_DIR/vim-api
    sudo sed -i -e 's|${OCF_ROOT}|/usr/lib/ocf|g' $NFV_OCF_DIR/vim-webserver

    sudo install -d -m 755 $NFV_CONF_DIR/vim/
    sudo install -p -D -m 644 $NFV_VIM_DIR/nfv_vim/config.ini $NFV_CONF_DIR/vim/config.ini
    sudo install -p -D -m 644 $NFV_VIM_DIR/nfv_vim/debug.ini $NFV_CONF_DIR/vim/debug.ini
    sudo sed -i -e 's|@SYSCONFDIR@|/etc|g' $NFV_CONF_DIR/vim/config.ini
    sudo sed -i -e "s|@PYTHONROOT@|${PYTHON_SITE_DIR}|g" $NFV_CONF_DIR/vim/config.ini

    # nfv-plugins
    sudo install -d -m 755 $NFV_CONF_DIR/nfv_plugins/

    sudo install -d -m 755 $NFV_CONF_DIR/nfv_plugins/alarm_handlers/
    sudo install -p -D -m 644 $NFV_PLUGINS_DIR/nfv_plugins/alarm_handlers/config.ini $NFV_CONF_DIR/nfv_plugins/alarm_handlers/config.ini

    sudo install -d -m 755 $NFV_CONF_DIR/nfv_plugins/event_log_handlers/
    sudo install -p -D -m 644 $NFV_PLUGINS_DIR/nfv_plugins/event_log_handlers/config.ini $NFV_CONF_DIR/nfv_plugins/event_log_handlers/config.ini

    sudo install -d -m 755 $NFV_CONF_DIR/nfv_plugins/nfvi_plugins/
    sudo install -p -D -m 644 $NFV_PLUGINS_DIR/nfv_plugins/nfvi_plugins/config.ini $NFV_CONF_DIR/nfv_plugins/nfvi_plugins/config.ini
    sudo install -p -D -m 644 $NFV_PLUGINS_DIR/scripts/nfvi-plugins.logrotate $STXNFV_SYSCONFDIR/logrotate.d/nfvi-plugins.logrotate

    # nfv-client
    install -d -m 755 $STXNFV_SYSCONFDIR/bash_completion.d
    sudo install -m 444 $NFV_CLIENT_DIR/scripts/sw-manager.completion $STXNFV_SYSCONFDIR/bash_completion.d/sw-manager
}

function configure_nfv {
    echo "Configuring nfv"
    # nfv-vim
    iniset -sudo $NFV_CONF_DIR/vim/config.ini "vim-webserver" "host" "$HOST_IP"

    # nfv-plugins
    iniset -sudo $NFV_CONF_DIR/nfv_plugins/nfvi_plugins/config.ini "platform" "authorization_ip" "$HOST_IP"
    iniset -sudo $NFV_CONF_DIR/nfv_plugins/nfvi_plugins/config.ini "openstack" "authorization_ip" "$HOST_IP"
    iniset -sudo $NFV_CONF_DIR/nfv_plugins/nfvi_plugins/config.ini "amqp" "host" "$RABBIT_HOST"
    iniset -sudo $NFV_CONF_DIR/nfv_plugins/nfvi_plugins/config.ini "amqp" "user_id" "$RABBIT_USERID"
    iniset -sudo $NFV_CONF_DIR/nfv_plugins/nfvi_plugins/config.ini "amqp" "password" "$RABBIT_PASSWORD"
    iniset -sudo $NFV_CONF_DIR/nfv_plugins/nfvi_plugins/config.ini "amqp" "virt_host" "nova_cell1"
    iniset -sudo $NFV_CONF_DIR/nfv_plugins/nfvi_plugins/config.ini "host-listener" "host" "$HOST_IP"
}

function start_nfv {
    echo "Starting nfv"
    echo "trigger starting vim service"
    iniset -sudo $STXNFV_SYSCONFDIR/systemd/system/devstack@nfv-vim.service "Service" "Type" "forking"
    iniset -sudo $STXNFV_SYSCONFDIR/systemd/system/devstack@nfv-vim.service "Service" "PIDFile" "/var/run/nfv-vim.pid"
    run_process nfv-vim "/usr/lib/ocf/resource.d/nfv/vim start" root root

    echo "trigger starting vim-api service"
    iniset -sudo $STXNFV_SYSCONFDIR/systemd/system/devstack@nfv-vim-api.service "Service" "Type" "forking"
    iniset -sudo $STXNFV_SYSCONFDIR/systemd/system/devstack@nfv-vim-api.service "Service" "PIDFile" "/var/run/nfv-vim-api.pid"
    run_process nfv-vim-api "/usr/lib/ocf/resource.d/nfv/vim-api start" root root

    echo "trigger starting vim-webserver service"
    iniset -sudo $STXNFV_SYSCONFDIR/systemd/system/devstack@nfv-vim-webserver.service "Service" "Type" "forking"
    iniset -sudo $STXNFV_SYSCONFDIR/systemd/system/devstack@nfv-vim-webserver.service "Service" "PIDFile" "/var/run/nfv-vim-webserver.pid"
    run_process nfv-vim-webserver "/usr/lib/ocf/resource.d/nfv/vim-webserver start" root root
}

function stop_nfv {
    echo "Stopping nfv"
    stop_process nfv-vim
    stop_process nfv-vim-api
    stop_process nfv-vim-webserver
}

function cleanup_nfv {
    echo "Cleaning nfv"
    sudo rm -rf $NFV_CONF_DIR
    sudo rm -rf $NFV_OCF_DIR
    sudo rm -rf $STXNFV_SYSCONFDIR/bash_completion.d/sw-manager

    sudo rm -rf $STXNFV_SYSCONFDIR/systemd/system/devstack@nfv-vim.service
    sudo rm -rf $STXNFV_SYSCONFDIR/systemd/system/devstack@nfv-vim-api.service
    sudo rm -rf $STXNFV_SYSCONFDIR/systemd/system/devstack@nfv-vim-webserver.service

    pip_uninstall nfv-client
    pip_uninstall nfv-tools
    pip_uninstall windriver-nfv-plugins
    pip_uninstall windriver-nfv-common-plugins
    pip_uninstall nfv-vim
}

function test_nfv {
    echo "todo: test nfv"
}

function cleanup_guest_client {
    sudo rm -rf $STX_PREFIX/include/guest-client
    sudo rm -rf $STX_SDK_DEPLOY_DIR
    sudo rm -rf $STXNFV_SYSCONFDIR/systemd/system/guest-client.service
    sudo rm -rf $STXNFV_SYSCONFDIR/guest-client
    sudo rm -rf $STX_PREFIX/bin/guest-client
    sudo rm -rf $STX_PREFIX/lib/libguest_common_api.so.$GUEST_CLIENT_VERSION
    sudo rm -rf $STX_PREFIX/lib/libguest_heartbeat_api.so.$GUEST_CLIENT_VERSION
}

function install_guest_client {
    pushd $STXNFV_DIR/guest-client/guest-client-$GUEST_CLIENT_VERSION

    make clean
    make build sysconfdir=$STXNFV_SYSCONFDIR
    make sample
    make tar ARCHIVE_NAME=wrs-guest-heartbeat-$GUEST_CLIENT_VERSION
    find build

    # Sudo Install for guest-client package
    sudo install -m 755 -d $STX_PREFIX/include/guest-client
    sudo install -m 644 -p -D guest_client/src/heartbeat/guest_heartbeat_msg_defs.h $STX_PREFIX/include/guest-client/guest_heartbeat_msg_defs.h
    sudo install -d $STX_SDK_DEPLOY_DIR
    sudo install -m 640 build/wrs-guest-heartbeat-$GUEST_CLIENT_VERSION.tgz $STX_SDK_DEPLOY_DIR

    # Systemd services
    sudo install -m 644 -p -D guest_client/scripts/guest-client.service $STXNFV_SYSCONFDIR/systemd/system/guest-client.service
    sudo install -m 744 -p -D guest_client/scripts/guest-client.systemd $STXNFV_SYSCONFDIR/guest-client/guest-client.systemd

    sudo install -m 750 -d $STXNFV_SYSCONFDIR/guest-client/heartbeat
    sudo install -m 755 -p -D guest_client/scripts/guest_heartbeat.conf $STXNFV_SYSCONFDIR/guest-client/heartbeat/guest_heartbeat.conf
    sudo install -m 755 -p -D guest_client/scripts/sample_event_handling_script $STXNFV_SYSCONFDIR/guest-client/heartbeat/sample_event_handling_script
    sudo install -m 755 -p -D guest_client/scripts/sample_health_check_script $STXNFV_SYSCONFDIR/guest-client/heartbeat/sample_health_check_script
    sudo install -m 640 -p -D build/guest-client $STX_PREFIX/bin/guest-client
    sudo install -m 640 -p -D build/libguest_common_api.so.$GUEST_CLIENT_VERSION $STX_PREFIX/lib/libguest_common_api.so.$GUEST_CLIENT_VERSION
    sudo install -m 640 -p -D build/libguest_heartbeat_api.so.$GUEST_CLIENT_VERSION $STX_PREFIX/lib/libguest_heartbeat_api.so.$GUEST_CLIENT_VERSION

    popd
}

$_XTRACE_STX_NFV
